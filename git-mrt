#!/bin/bash

usage() {
    printf "Usage: %s [-v] [-x] cmd\n" `basename $0`
    echo "Available commands:"
    echo "  push <beamline tla> <repository> <branch> -"
    echo "            Creates a local copy of the beamline code"
    echo "            repository in ~/.monorepo if not present,"
    echo "            copies the current working repository"
    echo "            to a subfolder <beamline tla>/<repository>," 
    echo "            and pushes to a branch on github labelled" 
    echo "            <beamline tla>/<repository>/<branch>."
    echo "  pull <beamline tla> <repository name> <location> -"
    echo "            Creates a local copy of the beamline code"
    echo "            repository in ~/.monorepo if not present, "
    echo "            and creates a copy of <repository>"
    echo "            belonging to <beamline tla> in <location>,"
    echo "            if possible. If <location> already contains"
    echo "            a git repository, attempts to update it."
    exit 2
}

MRLOC=~/.monorepo

function die {
    echo "$1" >&2
    exit 1
}

#while getopts lh arg
#do
#    case $arg in
#    l)    MRLOC=

cmd="$1"
shift

case "$cmd" in
help)
    usage
    ;;

push)
    BRANCH=$(git rev-parse --abbrev-ref HEAD)
    REPOLOC=$(git rev-parse --show-toplevel)
    [ ! -d $MRLOC ] && mkdir $MRLOC
    cd $MRLOC
    [ ! -d app-deploy-mono ] && git clone --depth 1 --filter=blob:none --sparse https://github.com/NSLS2/app-deploy-mono.git
    cd app-deploy-mono
    [ ! -d .git ] && die "~/.monorepo/app-deploy-mono exists but is not a git repository, determine the cause manually"
    git sparse-checkout set beamlines/$1/$2
    git pull
    if [ -d beamlines/$1/$2 ]; then
        git subtree pull -P beamlines/$1/$2 $REPOLOC $BRANCH
    else
        git subtree add -P beamlines/$1/$2 $REPOLOC $BRANCH
    fi
    git checkout -b $1/$2/$3
    git push --set-upstream origin $1/$2/$3
    git checkout main
    ;;

pull)
    [ ! -d $MRLOC ] && mkdir $MRLOC
    cd $MRLOC
    [ ! -d app-deploy-mono ] && git clone --depth 1 --filter=blob:none --sparse https://github.com/NSLS2/app-deploy-mono.git
    cd app-deploy-mono
    [ ! -d .git ] && die "~/.monorepo/app-deploy-mono exists but is not a git repository, determine the cause manually"
    git sparse-checkout set beamlines/$1/$2
    git pull
    [ ! -d beamlines/$1/$2 ] && die "No repository with the directory $1/$2 in app-deploy-mono"
    git subtree split -P beamlines/$1/$2 --annotate='(split)' --rejoin -b $1/$2/split
    if [ -d $3 ]; then
        [ ! -d $3/.git ] && die "Directory $3 exists but is not a git repository, cannot overwrite"
        cd $3
        git pull $MRLOC/app-deploy-mono $1/$2/split
    else
        mkdir $3
        cd $3
        git init
        git pull $MRLOC/app-deploy-mono $1/$2/split
    fi
    ;;

*)
    [ "$cmd" ] && echo "Unknown command '$cmd'"
    usage
    exit 1
    ;;
esac
